---
import '../../../components/player.page.ts';
import { BASE_PATH_WITHOUT_DOMAIN } from '../../../../base-path.mjs';
import { playerDataService, PlayerData } from '../../../services/playerdata/playerdata.service.ts';
import { teamPlayerService } from '../../../services/team-players.service';
import { bundesligaTableService } from '../../../services/bundesliga-table.service';
import { BundesligaTableEntry, BundesligaTable } from '../../../models/bundesliga-table';
import { PlayerListItem } from '../../../models/player-list-item';
import favIcon from '../../../../images/favicon-16.png';
import '../../../styles/page.css';

const { params } = Astro.request;
const serverJsonData: PlayerData = await playerDataService.getData(params.playerId);

export async function getStaticPaths() {
  const bundesligaTable: BundesligaTable = await bundesligaTableService.getData();
  const teamIds: string[] = bundesligaTable.teams.map((team: BundesligaTableEntry) => team.teamId);
  teamIds.push('INACTIVE_PLAYERS');
  const deepPlayerData: { params: any; metadata: PlayerListItem }[][] = await Promise.all(
    teamIds.map(async (teamId: string) => {
      const result = await teamPlayerService.getData(teamId);
      return result.map(player => {
        return {
          params: {
            playerName: `${player.firstName} ${player.lastName}`,
            playerId: String(player.playerId)
          },
          metadata: {
            ...player
          }
        };
      });
    })
  );
  return deepPlayerData.flat();
}

const playerName: string = serverJsonData?.playerInfo?.knownName ?? params.playerName;
const props = {
  'player-name': playerName,
  'player-id': params.playerId,
  'team-id': serverJsonData.playerInfo.teamId,
  'server-json-data': JSON.stringify(serverJsonData)
};
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <link rel="preload" as="image" href={serverJsonData.playerInfo.profileBig} />
    <link rel="preload" as="font" href={`${BASE_PATH_WITHOUT_DOMAIN}/fonts/roboto-condensed-v24-latin-700.woff2`} />
    <link rel="preload" as="font" href={`${BASE_PATH_WITHOUT_DOMAIN}/fonts/roboto-condensed-v24-latin-regular.woff2`} />
    <link rel="icon" type="image/x-icon" href={favIcon} />
    <title>{playerName} - better-kickbase</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content={`Spielerprofil von ${playerName} - better-kickbase-web`} />
  </head>
  <body style="padding:0 !important;">
    <bkb-player {...props} client:idle></bkb-player>
  </body>
</html>
